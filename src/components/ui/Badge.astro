---
import { cn } from '@/lib/utils'

export interface Props {
  variant?: 'default' | 'secondary' | 'destructive' | 'outline' | 'success' | 'tech'
  size?: 'sm' | 'md' | 'lg'
  pulse?: boolean
  class?: string
}

const {
  variant = 'default',
  size = 'md',
  pulse = false,
  class: className,
} = Astro.props

const variantClasses = {
  default: 'border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80',
  secondary: 'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',
  destructive: 'border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80',
  outline: 'text-foreground',
  success: 'border-transparent bg-green-600 text-white shadow hover:bg-green-700',
  tech: '', // Custom classes will be provided via className for tech badges
}

const sizeClasses = {
  sm: 'px-2 py-0.5 text-xs',
  md: 'px-2.5 py-0.5 text-xs',
  lg: 'px-3 py-1 text-sm',
}

const baseClasses = 'inline-flex items-center gap-1.5 rounded-md border font-semibold transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2'

const classes = cn(
  baseClasses,
  variantClasses[variant],
  sizeClasses[size],
  pulse && 'animate-pulse',
  className
)
---

<div class={classes}>
  {pulse && (
    <span class="relative flex h-2 w-2">
      <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-current opacity-75"></span>
      <span class="relative inline-flex rounded-full h-2 w-2 bg-current"></span>
    </span>
  )}
  <slot />
</div>
